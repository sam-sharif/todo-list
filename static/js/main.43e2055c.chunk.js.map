{"version":3,"sources":["assets/images/icons/favicon.ico","assets/images/bg-01.jpg","assets/images/dreamstime.jpg","Store/action.js","Store/actionTypes.js","api/todo/todoAxios.js","Container/Login/login.js","Components/Navbar/navbar.js","Components/PopupMessage/PopupMessage.js","Container/TodoList/todoList.js","Components/homePage/homePage.js","Container/Signup/Signup.js","Container/TodoForm/TodoForm.js","App.js","serviceWorker.js","Store/Reducer.js","index.js"],"names":["module","exports","logout","type","todoAxios","axios","create","baseURL","FormPage","state","username","password","formIsValid","loginStatus","userAndPasswordHandler","event","formValidation","inputList","document","querySelectorAll","value","setState","target","name","loginHandler","post","then","response","props","onSuccessfulLogin","data","token","history","push","catch","error","bg","require","buttonStatus","buttonContainerStatus","this","className","style","backgroundImage","data-validate","onChange","placeholder","data-symbol","disabled","onClick","paddingTop","to","id","Component","connect","signupDone","dispatch","user","action","userAuthenticated","onLogout","withRouter","todoList","logStatus","location","pathname","fontSize","auth","href","myNavbar","children","PopupMessage","showPopup","title","description","fontWeight","fetchData","get","console","log","editHandler","m","obj","deleteHandler","delete","x","y","addTask","task","startDate","endDate","targetDate","done","key","arrayCopy","sort","a","b","marginTop","backgroundColor","colspan","textAlign","sortBy","padding","map","height","class","window","confirm","PureComponent","styles","paperContainer","Image","marginBottom","backgroundSize","role","Signup","userExist","signupStatus","showValidationError","validationError","trim","match","isNaN","charAt","signupHandler","onSignupSuccessful","cogoToast","success","onSignupDoneOff","TodoForm","inputsNotNull","datesValid","dateComparisonChecker","dateValidity","startDateInput","getElementById","targetDateInput","Date","getTime","endDateInput","submitHandler","e","preventDefault","respone","er","message","put","hideAfter","cancelHandler","inputHandler","inputValidity","textarea","newTask","checked","dateValidationChecker","today","toISOString","split","dates","getElementsByClassName","i","length","setAttribute","receivedTask","min","onKeyDown","display","width","for","cols","rows","onInput","App","interceptors","request","use","headers","common","myRouts","path","exact","component","Login","TodoList","HomePage","Boolean","hostname","initialState","reducer","store","createStore","applyMiddleware","thunk","app","basename","process","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.43e2055c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.7d4140c7.ico\";","module.exports = __webpack_public_path__ + \"static/media/bg-01.c92b2d76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dreamstime.f5c2ae1a.jpg\";","import * as actionType from './actionTypes'\r\nexport const  authSuccess = (user,token)=>{\r\n    return{\r\n        type: actionType.LOGIN_SUCCESS,\r\n        username: user,\r\n        token: token\r\n    }\r\n\r\n}\r\nexport const  logout = ()=>{\r\n    return{\r\n        type: actionType.LOGOUT\r\n    }\r\n\r\n}\r\nexport const  signupSucceeded = ()=>{\r\n    return{\r\n        type: actionType.SIGNUP_SUCCESSFUL\r\n    }\r\n\r\n}\r\nexport const  signupDoneOff = ()=>{\r\n    return{\r\n        type: actionType.SIGNUP_OFF\r\n    }\r\n\r\n}","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const SIGNUP_SUCCESSFUL = 'SIGNUP_SUCCESSFUL';\r\nexport const SIGNUP_OFF = 'SIGNUP_OFF';","import axios from 'axios'\r\n\r\nconst todoAxios = axios.create({\r\n    baseURL:'http://my-todo-list.us-east-2.elasticbeanstalk.com/'\r\n})\r\n\r\nexport default todoAxios","import React, { Component,Fragment } from 'react';\r\n\r\nimport '../../assets/images/icons/favicon.ico'\r\nimport '../../assets/vendor/bootstrap/css/bootstrap.min.css'\r\nimport '../../assets/fonts/font-awesome-4.7.0/css/font-awesome.min.css'\r\nimport '../../assets/fonts/iconic/css/material-design-iconic-font.min.css'\r\nimport '../../assets/vendor/animate/animate.css'\r\nimport '../../assets/vendor/css-hamburgers/hamburgers.min.css'\r\nimport '../../assets/vendor/animsition/css/animsition.min.css'\r\nimport '../../assets/css/util.css'\r\nimport '../../assets/css/main.css'\r\nimport {connect} from 'react-redux'\r\nimport * as action from '../../Store/index'\r\nimport todoAxios from '../../api/todo/todoAxios'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nclass FormPage extends Component {\r\n\r\n    state = {\r\n        username:'',\r\n        password:'',\r\n        formIsValid:false,\r\n        loginStatus:true\r\n    }\r\n    \r\n    componentDidMount(){\r\n       \r\n        \r\n\r\n    }\r\n    userAndPasswordHandler = (event) =>{\r\n        let formValidation=false\r\n        let inputList = document.querySelectorAll(\"input\")\r\n        \r\n        if(inputList[0].value!==''&&inputList[1].value!==''){\r\n            formValidation=true;\r\n        }\r\n        this.setState({[event.target.name]:event.target.value,formIsValid:formValidation})\r\n    }\r\n    loginHandler = ()=>{\r\n        todoAxios.post(`/authenticate`,{\r\n            username:this.state.username,password:this.state.password\r\n        }).\r\n        then(response=>{\r\n            this.props.onSuccessfulLogin(this.state.username,response.data.token)\r\n            this.props.history.push(\"/home\")\r\n            this.setState({loginStatus:true})\r\n        }).catch(error=>{\r\n            this.setState({loginStatus:false})\r\n        })\r\n       \r\n    }\r\n    \r\n    render(){\r\n        \r\n        var bg=require('../../assets/images/bg-01.jpg')\r\n        let buttonStatus = 'login-btn-disabled'\r\n        let buttonContainerStatus = 'container-login-btn-disabled'\r\n       \r\n        \r\n        if(this.state.formIsValid){\r\n            buttonStatus ='login100-form-bgbtn'\r\n            buttonContainerStatus='container-login100-form-btn'\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n          <div className=\"limiter\">\r\n              <div className=\"container-login100\" style={{backgroundImage: \"url(\"+bg+\")\"}}>\r\n                  <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-54\">\r\n                 \r\n                          <span className=\"login100-form-title p-b-49\">\r\n                              Login\r\n                          </span>\r\n                          {this.state.loginStatus?null:<span className=\"error\">Invalid Username/Password</span>}\r\n      \r\n                          <div className=\"wrap-input100 validate-input m-b-23\" data-validate = \"Username is reauired\">\r\n                              <span className=\"label-input100\">Username</span>\r\n                              <input className=\"input100\" type=\"text\" name=\"username\"\r\n                              value={this.state.username} onChange={this.userAndPasswordHandler} placeholder=\"Type your username\"/>\r\n                              <span className=\"focus-input100\" data-symbol=\"&#xf206;\"></span>\r\n                          </div>\r\n      \r\n                          <div className=\"wrap-input100 validate-input\" data-validate=\"Password is required\">\r\n                              <span className=\"label-input100\">Password</span>\r\n                              <input className=\"input100\" type=\"password\" name=\"password\"\r\n                               placeholder=\"Type your password\" value={this.state.password} onChange={this.userAndPasswordHandler}/>\r\n                              <span className=\"focus-input100\" data-symbol=\"&#xf190;\"></span>\r\n                          </div>\r\n                          \r\n                                                    \r\n                          <div className={buttonContainerStatus}>\r\n                              <div className=\"wrap-login100-form-btn\">\r\n                                  <div className={buttonStatus}></div>\r\n                                  <button className='login100-form-btn' disabled={!this.state.formIsValid}  onClick={this.loginHandler}>\r\n                                      Login\r\n                                  </button>\r\n                              </div>\r\n                          </div>\r\n      \r\n                          <div className=\"flex-col-c p-t-155\" style={{paddingTop:'30px'}}>\r\n                              <span className=\"txt1 p-b-17\">\r\n                                  Or Sign Up Using\r\n                              </span>\r\n      \r\n                              \r\n                                  <NavLink className=\"txt2\" to=\"/signup\"><h3>Sign Up</h3></NavLink>\r\n                                  \r\n                          </div>\r\n                      \r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div id=\"dropDownSelect1\"></div>\r\n         \r\n          </Fragment>\r\n        )\r\n    }\r\n    \r\n       \r\n  \r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSuccessfulLogin: (username,token) => dispatch(action.authSuccess(username,token))\r\n        \r\n    };\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        signupDone: state.signupDone\r\n    };\r\n  };\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(FormPage) ;","import React,{Fragment} from 'react'\r\nimport {NavLink,withRouter} from 'react-router-dom'\r\nimport './navbar.css'\r\nimport {connect} from 'react-redux'\r\nimport * as action from '../../Store/index'\r\n\r\n\r\nconst navbar = (props)=>{\r\n\r\n  let todoList = null\r\n  let logStatus = <NavLink to={props.location.pathname==='/signup'?'/login':'/signup'}>\r\n    <i className=\"fa fa-user-circle-o\" style={{fontSize:'30px'}}> Login/Sign-up</i>\r\n    \r\n    </NavLink>\r\n  let auth = \"login\" \r\n\r\n  const logoutHandler = ()=>{\r\n    props.onLogout()\r\n  }\r\n  \r\n  \r\n  if(props.userAuthenticated){\r\n    todoList = <NavLink to='/todoList'><i className=\"fa fa-list-alt\" style={{fontSize:'30px'}}> Todo List</i></NavLink>\r\n    logStatus = <a href=\"\" onClick={logoutHandler}><span><i className=\"fa fa-sign-out\" style={{fontSize:'30px'}}>Logout</i></span></a>\r\n    auth = \"logout\"\r\n  }\r\n  \r\n    const myNavbar =\r\n    <Fragment>\r\n    <ul className=\"topnav\">\r\n      <li><NavLink to='/home'><i className=\"fa fa-home\" style={{fontSize:'30px'}}> Home</i></NavLink></li>\r\n      <li className={auth}>{logStatus}</li>\r\n      <li>{todoList}</li>\r\n      \r\n    </ul>\r\n    \r\n\r\n</Fragment>\r\n\r\nreturn(\r\n<Fragment>\r\n    {myNavbar}\r\n    <main id=\"navbarMain\">\r\n     {props.children}\r\n    </main>\r\n    \r\n  </Fragment>\r\n)\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n      onLogout: () => dispatch(action.logout)\r\n      \r\n  };\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n      userAuthenticated: state.userAuthenticated\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps) (withRouter(navbar))\r\n","import React,{Component} from 'react'\r\nimport classes from './PopupMessage.css'\r\n\r\nclass PopupMessage extends Component{\r\n\r\n    state = {\r\n        \r\n        showPopup:false\r\n               \r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <body id=\"body\" className={this.state.showPopup?\"active\":null}>\r\n\r\n<div className=\"wrapper\">\r\n    <div className=\"button\" onClick={()=>this.setState({showPopup:true})}>\r\n\r\n        <span id=\"titleElement\" className=\"button-text\">{this.props.title}</span>\r\n        <div className=\"button-backgrounds\">\r\n        <div className=\"button-circle button-circle1\"></div>\r\n            <div className=\"button-circle button-circle2\"></div>\r\n            <div className=\"button-circle button-circle3\"></div>\r\n            <div className=\"button-circle button-circle4\"></div>\r\n        </div>\r\n    </div> \r\n</div>\r\n\r\n<div className=\"wrapper\">\r\n    <div className=\"popup\">\r\n        <div className=\"popup-inside\">\r\n            <div className=\"backgrounds\">\r\n                <div className=\"background\"></div>\r\n                <div className=\"background background2\"></div>\r\n                <div className=\"background background3\"></div>\r\n                <div className=\"background background4\"></div>\r\n                <div className=\"background background5\"></div>\r\n                <div className=\"background background6\"></div>\r\n            </div>\r\n        </div>\r\n        <div className=\"content\">\r\n            <div className=\"content-wrapper\">\r\n                <h1 style={{fontSize:'25px'}}>Description</h1>\r\n                <p>{this.props.description}</p>\r\n                <p style={{fontWeight:'bold'}} className=\"try-again\" \r\n                onClick={()=>this.setState({showPopup:false})}>close</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n</body>\r\n        )\r\n    }\r\n\r\n}\r\nexport default PopupMessage","import React,{PureComponent, Fragment} from 'react'\r\nimport classes from './todoList.css'\r\nimport todoAxios from '../../api/todo/todoAxios'\r\nimport PopupMessage from '../../Components/PopupMessage/PopupMessage'\r\nimport {connect} from 'react-redux'\r\n\r\nclass todoList extends PureComponent {\r\n    state={\r\n        todoList: [] \r\n    }\r\n\r\n    fetchData = ()=>{\r\n        todoAxios.get(`/todos/${this.props.username}`).then(response=>{\r\n            \r\n            this.setState({todoList:response.data})\r\n        }).catch(error=>console.log(error))\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.fetchData()\r\n    }\r\n\r\n    editHandler = (m)=>{\r\n        this.props.history.push('/todoForm',{obj:m})\r\n    }\r\n    deleteHandler = (id)=>{\r\n        todoAxios.delete(`/todo/${id}`).then(response=>this.fetchData()).catch(error=>console.log(error))\r\n\r\n    }\r\n\r\n    x = 1;\r\n    y = -1;   \r\n       \r\n    sortBy(key) {\r\n        \r\n      let arrayCopy = [...this.state.todoList];\r\n      arrayCopy.sort((a, b) => (a[key] > b[key]) ? this.x : this.y);\r\n      this.setState({todoList: arrayCopy});\r\n      \r\n    }\r\n    addTask = ()=>{\r\n        let task = {id:'',description:'',title:'',startDate:'',endDate:'',targetDate:'',done:false,\r\n        username:this.props.username}\r\n        this.props.history.push('/todoForm',{obj:task})\r\n    }\r\n            \r\n    render(){\r\n       \r\n        return(\r\n<Fragment>\r\n\r\n<body id=\"body\" style={{marginTop:'4%',backgroundColor:'rgb(243, 178, 227)'}}>\r\n<div id='main'>           \r\n\r\n<table className=\"container\">\r\n\t<thead>\r\n        <tr>\r\n            <th colspan=\"7\" style={{textAlign:'right'}}>\r\n             <button id=\"addBtn\" onClick={this.addTask} type=\"button\">\r\n             <p><i className=\"fa fa-plus\" > New Task</i></p>\r\n             </button>\r\n\r\n            </th>\r\n        </tr>\r\n\r\n        <tr>\r\n            <th colspan=\"7\">\r\n                 <h1 id=\"tableTitle\">My Todo List</h1>\r\n            </th>\r\n        </tr>\r\n\t\t<tr>\r\n\t\t\t\r\n            <th><button  onClick={() => {\r\n                this.sortBy('title')\r\n                this.x=this.x*-1\r\n                this.y=this.y*-1\r\n            }}><h1 id=\"H1\">Title <i className=\"fa fa-sort\"></i></h1></button></th>\r\n\r\n            <th><button onClick={() => {\r\n                this.sortBy('startDate')\r\n                this.x=this.x*-1\r\n                this.y=this.y*-1\r\n            }}><h1 id=\"H1\">Start Date <i className=\"fa fa-sort\"></i></h1></button></th>\r\n\r\n            <th><button onClick={() => {\r\n                this.sortBy('targetDate')\r\n                this.x=this.x*-1\r\n                this.y=this.y*-1\r\n            }}><h1 id=\"H1\">Deadline <i className=\"fa fa-sort\"></i></h1></button></th>\r\n\r\n            <th><button onClick={() => {\r\n                this.sortBy('endDate')\r\n                this.x=this.x*-1\r\n                this.y=this.y*-1\r\n            }}><h1 id=\"H1\">End Date <i className=\"fa fa-sort\"></i></h1></button></th>\r\n\r\n            <th><button onClick={() => {\r\n                this.sortBy('done')\r\n                this.x=this.x*-1\r\n                this.y=this.y*-1\r\n            }}><h1 id=\"H1\">Completed<i className=\"fa fa-sort\"></i></h1></button></th>\r\n\r\n            <th style={{padding:'5px'}}><h1 id=\"H1\">Update</h1></th>\r\n            <th style={{padding:'5px'}}><h1 id=\"H1\">Delete</h1></th>\r\n\t\t\t\r\n\t\t</tr>\r\n\t</thead>\r\n\t<tbody>\r\n        \r\n\t\t{this.state.todoList.map(m=>{\r\n            console.log(m)\r\n            return(\r\n                <tr style={{height:'10%'}}>\r\n              \r\n              <td className=\"notHover\"><PopupMessage title={m.title} description={m.description}/></td>\r\n              <td>{m.startDate}</td>\r\n              <td>{m.targetDate}</td>\r\n              <td>{m.endDate==null?'-':m.endDate}</td>\r\n              <td className=\"notHover\" style={{textAlign:'center'}}>{m.done===true?\r\n              <i id=\"yesSign\" className=\"fa fa-check\"></i>:\r\n              <i id=\"noSign\" className=\"fa fa-close\"></i>}</td>\r\n              <td className=\"notHover\"><button id=\"updateBtn\" type=\"button\"\r\n               class=\"btn btn-success\" onClick={()=>this.editHandler(m)}>Update</button></td>\r\n              <td style={{padding:'5px'}} className=\"notHover\"><button id=\"deleteBtn\"\r\n               type=\"button\"class=\"btn btn-danger\"\r\n              onClick={() =>{if(window.confirm('Are you sure you wish to delete this item?'))\r\n              this.deleteHandler(m.id) } }>Delete</button></td>\r\n            </tr>\r\n\r\n            )\r\n            \r\n        })}\r\n\t</tbody>\r\n</table>\r\n</div>\r\n\r\n</body>\r\n\r\n</Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        username: state.username,\r\n        \r\n    };\r\n  };\r\nexport default connect(mapStateToProps) (todoList)","import React from 'react'\r\nimport Image from '../../assets/images/dreamstime.jpg'\r\nimport './homePage.css'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\n\r\nconst homePage = (props)=>{\r\n    const styles = {\r\n        paperContainer: {\r\n            backgroundImage: `url(${Image})`,\r\n            marginTop:'0px',\r\n            marginBottom:'0px',\r\n            backgroundSize:'cover'            \r\n        }\r\n    };\r\n    return(\r\n         <div className=\"jumbotron jumbotron-fluid\" style={styles.paperContainer}>\r\n           <div id=\"HomepageContainer\" >\r\n    <h1 id=\"homepageH1\" className=\"display-3\">{props.userAuthenticated?\"Welcome Dear\"+ ' ' +props.username:\r\n      \"Please login to access your TODO LIST\"}</h1>\r\n            <div id=\"homepageBackgroundDiv\"> <p>\r\n              Using this application you can create your todo list and schedule your activities.\r\n             I hope you enjoy it!</p></div>\r\n               <p className=\"lead\">\r\n             <NavLink className=\"btn btn-primary btn-lg\" to={props.userAuthenticated?\"/todoList\":\"/login\"} role=\"button\">\r\n             {props.userAuthenticated?\"Go to your Todo List\":<span>Login</span>}</NavLink>\r\n           </p>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n      userAuthenticated: state.userAuthenticated,\r\n      username: state.username\r\n  };\r\n};\r\nexport default connect(mapStateToProps) (homePage)","import React, { Component,Fragment } from 'react';\r\n\r\nimport '../../assets/images/icons/favicon.ico'\r\nimport '../../assets/vendor/bootstrap/css/bootstrap.min.css'\r\nimport '../../assets/fonts/font-awesome-4.7.0/css/font-awesome.min.css'\r\nimport '../../assets/fonts/iconic/css/material-design-iconic-font.min.css'\r\nimport '../../assets/vendor/animate/animate.css'\r\nimport '../../assets/vendor/css-hamburgers/hamburgers.min.css'\r\nimport '../../assets/vendor/animsition/css/animsition.min.css'\r\nimport '../../assets/css/util.css'\r\nimport '../../assets/css/main.css'\r\nimport {connect} from 'react-redux'\r\nimport * as action from '../../Store/index'\r\nimport todoAxios from '../../api/todo/todoAxios'\r\nimport cogoToast from 'cogo-toast';\r\n\r\n\r\n\r\nclass Signup extends Component {\r\n\r\n    state = {\r\n        formIsValid:false,\r\n        userExist:false,\r\n        signupStatus:false,\r\n        showValidationError: false\r\n    }\r\n    \r\n    componentWillUnmount(){\r\n       \r\n        if(this.props.signupDone){\r\n            cogoToast.success('Account successfully created!')\r\n            this.props.onSignupDoneOff()\r\n            \r\n        }\r\n    }\r\n    userAndPasswordHandler = (event) =>{\r\n        let formValidation=false\r\n        let inputList = document.querySelectorAll(\"input\")\r\n        let validationError = false\r\n        const lettersAndNumbers = /^[0-9a-zA-Z]+$/;\r\n        const startsWithLetter = /^\\d/\r\n         \r\n\r\n        if(inputList[0].value.trim()!==''&&inputList[1].value.trim()!==''){\r\n            if(inputList[0].value.match(lettersAndNumbers)&&\r\n            isNaN(inputList[0].value.charAt(0))){\r\n                formValidation=true;\r\n                validationError=false;\r\n\r\n            }\r\n            else{\r\n                validationError=true\r\n            }\r\n            \r\n        }\r\n        this.setState({[event.target.name]:event.target.value,\r\n            formIsValid:formValidation,showValidationError:validationError})\r\n        \r\n    }\r\n    signupHandler = ()=>{\r\n        \r\n        todoAxios.post(`/register`,{\r\n            username:this.state.username,password:this.state.password\r\n        }).\r\n        then(response=>{\r\n            console.log(response.data)\r\n            this.props.onSignupSuccessful()\r\n            this.setState({userExist:false})\r\n            this.props.history.push(\"/login\")\r\n        }).catch(error=>{\r\n            console.log(error)\r\n            if(error.response.data===\"UserAlreadyExists\"){\r\n                this.setState({userExist:true})\r\n            }\r\n        })\r\n      \r\n    }\r\n    \r\n    render(){\r\n        \r\n        var bg=require('../../assets/images/bg-01.jpg')\r\n        let buttonStatus = 'login-btn-disabled'\r\n        let buttonContainerStatus = 'container-login-btn-disabled'\r\n        \r\n        if(this.state.formIsValid){\r\n            buttonStatus ='login100-form-bgbtn'\r\n            buttonContainerStatus='container-login100-form-btn'\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n          <div className=\"limiter\">\r\n              <div className=\"container-login100\" style={{backgroundImage: \"url(\"+bg+\")\"}}>\r\n                  <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-54\">\r\n                      \r\n                          <span className=\"login100-form-title p-b-49\">\r\n                              Create Your Acount\r\n                          </span>\r\n                          {this.state.userExist?<span className=\"error\">User Already Exists</span>:null}\r\n                          {this.state.showValidationError?<span className=\"error\">\r\n                              Invalid Username/Password Format</span>:null}\r\n                          <div className=\"wrap-input100 validate-input m-b-23\" data-validate = \"Username is required\">\r\n                              <span className=\"label-input100\">Username</span>\r\n                              <input className=\"input100\" type=\"text\" name=\"username\" value={this.state.username}\r\n                              value={this.state.username} onChange={this.userAndPasswordHandler} placeholder=\"Type your username\"\r\n                              title=\"username must only contains letters and numbers and starts with a letter!\"\r\n                              />\r\n                              <span className=\"focus-input100\" data-symbol=\"&#xf206;\"></span>\r\n                          </div>\r\n      \r\n                          <div className=\"wrap-input100 validate-input\" data-validate=\"Password is required\">\r\n                              <span className=\"label-input100\">Password</span>\r\n                              <input className=\"input100\" type=\"password\" name=\"password\" value={this.state.password}\r\n                               placeholder=\"Type your password\" value={this.state.password} onChange={this.userAndPasswordHandler}/>\r\n                              <span className=\"focus-input100\" data-symbol=\"&#xf190;\"></span>\r\n                          </div>\r\n                          \r\n                                                    \r\n                          <div className={buttonContainerStatus}>\r\n                              <div className=\"wrap-login100-form-btn\">\r\n                                  <div className={buttonStatus}></div>\r\n                                  <button className='login100-form-btn' disabled={!this.state.formIsValid} onClick={this.signupHandler}>\r\n                                      Sign Up\r\n                                  </button>\r\n                              </div>\r\n                          </div>\r\n      \r\n                          \r\n                      \r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div id=\"dropDownSelect1\"></div>\r\n         \r\n          </Fragment>\r\n        )\r\n    }\r\n    \r\n       \r\n  \r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSignupSuccessful: () => dispatch(action.signupSucceeded()),\r\n        onSignupDoneOff: () => dispatch(action.signupDoneOff())\r\n        \r\n    };\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        signupDone: state.signupDone\r\n    };\r\n  };\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Signup) ;","import React,{Component} from 'react';\r\nimport classes from './TodoForm.css'\r\nimport cogoToast from 'cogo-toast';\r\nimport todoAxios from '../../api/todo/todoAxios'\r\n\r\n\r\nclass TodoForm extends Component{\r\n    state={\r\n        task:{\r\n            id:'',\r\n            username:'',\r\n            title:'',\r\n            startDate:'',\r\n            targetDate:'',\r\n            endDate:'',\r\n            done:false,\r\n            description:''\r\n        },\r\n        inputsNotNull:false,\r\n        datesValid:true,\r\n        \r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props.location.state['obj'])\r\n        this.dateValidationChecker()\r\n        \r\n    }\r\n    componentWillMount(){\r\n        let receivedTask = this.props.location.state['obj']\r\n        this.setState({task:receivedTask})\r\n\r\n    }\r\n\r\n    dateComparisonChecker = ()=>{\r\n        let dateValidity=false\r\n        let startDateInput = document.getElementById(\"startDate\").value\r\n        let targetDateInput = document.getElementById(\"targetDate\").value\r\n        console.log(\"this is :\"+this.state.task.endDate)\r\n        if(this.state.task.endDate===null||this.state.task.endDate===''){\r\n            if((new Date(startDateInput).getTime()) <= (new Date(targetDateInput).getTime())){\r\n                dateValidity=true\r\n                \r\n            } \r\n        }\r\n        if(this.state.task.endDate!==null||this.state.task.endDate!==''){\r\n            let endDateInput = document.getElementById(\"endDate\").value\r\n            if((new Date(startDateInput).getTime()) <= (new Date(targetDateInput).getTime())&&\r\n            (new Date(startDateInput).getTime())<=(new Date(endDateInput).getTime())){\r\n                dateValidity=true\r\n                \r\n            }\r\n        }\r\n       \r\n        return dateValidity\r\n    }\r\n\r\n    submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        if (this.dateComparisonChecker()) {\r\n            if(this.state.task.id===''){ \r\n                todoAxios.post('/todo',this.state.task).then(respone=>{\r\n                    cogoToast.success('Task Successfully Created')\r\n                    this.props.history.push('/todoList')\r\n\r\n                }).catch(er=>{\r\n                    cogoToast.error(er.message)\r\n                })\r\n            }\r\n            if(this.state.task.id!==''){ \r\n                todoAxios.put('/todo',this.state.task).then(respone=>{\r\n                    cogoToast.success('Task Successfully Updated')\r\n                    this.props.history.push('/todoList')\r\n\r\n                }).catch(er=>{\r\n                    cogoToast.error(er.message)\r\n                })\r\n            }\r\n           \r\n        }else{\r\n            cogoToast.error('WRONG INPUT DATES!',{hideAfter:5})\r\n        }\r\n\r\n    }\r\n    cancelHandler = ()=>{\r\n        this.props.history.push('/todoList')\r\n    }\r\n    \r\n    inputHandler = (event) =>{\r\n        let inputValidity=false\r\n        let inputList = document.querySelectorAll(\"input\")\r\n        let textarea = document.getElementById(\"description\").value\r\n        \r\n        \r\n            \r\n            if(inputList[0].value!==''&&inputList[1].value!==''&&\r\n               inputList[2].value!==''&&textarea!==''){\r\n\r\n                 inputValidity=true; \r\n        }\r\n    \r\n        \r\n        let newTask = {...this.state.task}\r\n\r\n        switch (event.target.name) {\r\n            case 'done': \r\n            newTask[event.target.name]=event.target.checked\r\n                break;\r\n            \r\n        \r\n            default:\r\n                newTask[event.target.name]=event.target.value\r\n                break;\r\n        }\r\n        console.log(event.target.value)\r\n        this.setState({task:newTask,inputsNotNull:inputValidity}) \r\n    }\r\n\r\n    dateValidationChecker =()=>{\r\n        const today = new Date().toISOString().split('T')[0];\r\n        let dates = document.getElementsByClassName(\"Date\")\r\n        for (let i = 0; i < dates.length; i++) {\r\n            if(this.state.task[dates[i].name]===''){\r\n                dates[i].setAttribute('min', today);\r\n            }\r\n               \r\n        }\r\n    }\r\n    \r\n\r\n    render(){\r\n        \r\n    \r\n        return(\r\n            <body id=\"bodyForm\">\r\n    <div id=\"formContainer\">\r\n        \r\n        <div className=\"section animated bounceInLeft\">\r\n            <div className=\"brandname\">\r\n                <h1 >Sam Sharif</h1>\r\n                <h3>-------------------</h3>\r\n                <h3>Full-Stack Developer</h3>\r\n                <ul>\r\n                    <li><span>LinkedIn:</span> https://www.linkedin.com/in/sam-sharif-profile/</li>\r\n                    <li><span>Email:</span> samir.shaarif@gmail.com</li>\r\n                    \r\n                </ul>\r\n            </div>\r\n            <div className=\"contact\">\r\n                <h2>{this.state.task.id===''?\"Define Your New Task\":\"Edit Your Task\"}</h2>\r\n                <form >\r\n                    <p>\r\n                        <label>Title:</label>\r\n                        <input  type=\"text\" name=\"title\" value={this.state.task.title}\r\n                        onChange={this.inputHandler}/>\r\n                    </p>\r\n                    <p>\r\n                        <label>Start Date</label>\r\n                        <input id=\"startDate\" name=\"startDate\"  type=\"date\" className=\"Date\"\r\n                           min=\"\" onKeyDown={(e) => e.preventDefault()} value={this.state.task.startDate}\r\n                        onChange={this.inputHandler}/>\r\n                    </p>\r\n                    <p>\r\n                        <label>Deadline</label>\r\n                        <input type=\"date\" id=\"targetDate\" name=\"targetDate\" className=\"Date\"\r\n                         min=\"\" onKeyDown={(e) => e.preventDefault()} value={this.state.task.targetDate}\r\n                        onChange={this.inputHandler}/>\r\n                    </p>\r\n                    <p>\r\n                        <label>End Date</label>\r\n                        <input type=\"date\" id=\"endDate\" name=\"endDate\" className=\"Date\"\r\n                         min=\"\" onKeyDown={(e) => e.preventDefault()} value={this.state.task.endDate}\r\n                        onChange={this.inputHandler} disabled={this.state.task.id===''}/>\r\n                    </p>\r\n                    <p>\r\n                    <div  className=\"custom-control custom-checkbox mb-3\">\r\n                      <label style={{display:'inline',width:'10%'}}>Completed:</label>\r\n                        <input disabled={this.state.task.id===''} type=\"checkbox\" id=\"switch\" name=\"done\"\r\n                        checked={this.state.task.done} onClick={this.inputHandler} />\r\n                      <label id=\"toggleLabel\" for=\"switch\">Toggle</label>\r\n                    </div>\r\n                    </p>\r\n                    <p className=\"full\">\r\n                        <label>Task Description</label>\r\n                        <textarea id=\"description\" name=\"description\" cols=\"30\" rows=\"5\" value={this.state.task.description}\r\n                          onInput={this.inputHandler}></textarea>\r\n                    </p>\r\n                    <p className=\"submit\">\r\n                        <button id=\"submitButton\" onClick={this.submitHandler} disabled={!this.state.inputsNotNull}>Submit</button>\r\n                    </p>\r\n                    <p className=\"cancel\">\r\n                        <button id=\"cancelButton\" onClick={this.cancelHandler}>Cancel</button>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default TodoForm","import React,{Component, Fragment} from 'react';\nimport Login from './Container/Login/login'\nimport './App.css';\nimport {Route,Switch} from 'react-router-dom'\nimport Navbar from './Components/Navbar/navbar'\nimport TodoList from './Container/TodoList/todoList'\nimport HomePage from './Components/homePage/homePage'\nimport {connect} from 'react-redux'\nimport Signup from './Container/Signup/Signup'\nimport todoAxios from './api/todo/todoAxios'\nimport TodoForm from './Container/TodoForm/TodoForm'\n\n\n\nclass App extends Component {\n\n  render(){\n\n    \n    if(this.props.userAuthenticated){\n\n      todoAxios.interceptors.request.use(request=>{\n        request.headers.common['Authorization']='Bearer ' + this.props.token;\n        request.headers.common['Content-Type']='application/json'\n        request.headers.common['Accept']='application/json'\nconsole.log(request)\n            return request;\n        },error=>console.log(error)\n        )\n    }\n    \n     \n    let myRouts = (\n      <Switch>\n        \n        <Route path='/signup' exact component={Signup}/>\n        <Route path='/login' exact component={Login}/>\n        <Route path='/todoList' exact component={this.props.userAuthenticated?TodoList:Login}/>\n        <Route path='/todoForm' exact component={this.props.userAuthenticated?TodoForm:Login}/>\n        <Route path='/home' exact component={HomePage}/>\n        <Route path='/'  component={HomePage}/>\n      </Switch>\n    )\n    return (\n      <div className=\"App\" style={{backgroundColor:'rgb(243, 178, 227)'}}>\n         <Navbar>\n         {myRouts}\n         </Navbar>\n        \n      </div>\n    );\n  }\n  \n}\nconst mapStateToProps = state => {\n  return {\n      userAuthenticated: state.userAuthenticated,\n      token: state.token\n  };\n};\n\n\nexport default connect(mapStateToProps) (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionType from './actionTypes'\r\n\r\nconst initialState = {\r\n    username:null,\r\n    password:null,\r\n    token:null,\r\n    userAuthenticated: false,\r\n    signupDone:false\r\n}\r\nconst reducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case actionType.LOGIN_SUCCESS:\r\n            \r\n            return {\r\n                username: action.username,\r\n                token: action.token,\r\n                userAuthenticated: true\r\n                \r\n            }\r\n        case actionType.LOGOUT:\r\n            \r\n            return {\r\n                username: null,\r\n                password: null,\r\n                token: null,\r\n                userAuthenticated: false\r\n                    \r\n            } \r\n        case actionType.SIGNUP_SUCCESSFUL:\r\n            \r\n        return {\r\n            ...state,\r\n            signupDone:true\r\n                    \r\n        }    \r\n        case actionType.SIGNUP_OFF:\r\n            \r\n            return {\r\n                ...state,\r\n                signupDone:false\r\n                        \r\n            } \r\n    }\r\n    return state;\r\n\r\n}\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport {createStore,applyMiddleware} from 'redux'\nimport reducer from './Store/Reducer'\nimport {Provider} from 'react-redux'\nimport thunk from 'redux-thunk'\n\n\nconst store = createStore(reducer,applyMiddleware(thunk))\n    \n\nconst app =(\n    <Provider store={store}>\n     <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App/>\n     </BrowserRouter>\n    </Provider>\n) \n\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}